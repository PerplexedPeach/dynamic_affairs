organization
- thumbnail.png
- save files with UTF-8 with BOM encoding
- create event first, then add decisions and triggers for calling the event
- sex scenes alert the system sex has happened with carn sex effect
- keep track of training progress (subdomness in a relationship) with a hidden opinion modifiers
- scripted modifiers for adjust probability of random outcomes
- active vs passive character
	- active partner decides scene
		- depends on their fetish, or if they're not a deviant then just from a random vanilla list
		- fetish scenes has a chance of being passed on to passive partner
		- non-fetish scenes has a chance of passing on submission scene to passive partner
	- passive partner reacts to scene
- underlying submissiveness level trait (optional)
	- each option / action in a relationship taken has some chance of tiering this trait up / down
	- modifies the chances of success of sub/dom actions
- implementation order
	- (done) interesting character list generation
	- (done) stacking hidden opinion modifier to represent the sub/dom training progress
	- (done) choices in event sequence and how they affect the hidden relationship
	- add in ways to trigger the events (decisions(?), schemes(?), and scripted triggers)
	- separate event for when you're the active and passive partner
	- writing
	- add underlying trait with multiple tiers for influencing outcomes and getting influenced by actions
	- 3D models tying in with hidden relationships
- create effect for selecting which random event gets selected
- each scene is from the perspective of the player (male and female will have separate events; hub will select events based on gender)
	- special scenes for initiating relationships
	- scenes don't need to know the scene that preceded it, unless it's a chain sequence in which case it'll know
	- variable in_control for the event sequence that events could change and which effects descriptions
- scene list (see spreadsheet in same directory)
- trigger event hub search up trigger_event for example extort_subjects_effect
- generate events programmatically from python code
	- enum for all the event IDs instead of referring to them by numbers
	- organize events as a graph


relation
- dominant_opinion (-30, 30)


balance
- dom
	- gives dread
	- gives martial
	- gives positive opinion
	- gain strong hook on them at max level
- sub
	- gives - stress gain
	- gives diplomacy
	- triggers random events at max level
		- partner asks you to wear a collar in public (not everyone will know what it implies)
		- partner asks you to sub more by getting piercings
		- partner asks you to give up the responsibility of ruling to them (transfer your highest title)
		- can refuse each request, but it'll be stressful and they'll continue asking

decisions
- try to find eligible partner within close range
- cooldown 2 years?
- effect is to trigger an event
- ai potential?
	- not sure if I should allow for AI and just have one set of events, where you're also on the receiving end,
	or have 2 sets of events, one where you're the active partner and one where some AI will randomly act on you
	- may be mandatory to have the AI perform the decision
	- separate events depending on their status relative to you (your slave, your vassal, your liege, same level ruler / vassal)

events
- need namespace? not sure how those work
- type = character_event
- theme 
- root is player
- character flags used to facilitate hidden checks?
- use scripted events to populate list
	- consult PDXCON events 700 speakeasy (using an already populated list)
- immediate is executed before description, portraits, title are evaluated
	- can be used to trigger scripted effect to populate list

localization
- l_english: starting line in a _l_english.yml file
- need to wrap content in quotation marks
- for a decision, have the following
	- _desc:0 brief description?
	- _tooltip:1 long form description
	- _effect_tooltip:1 long form description of the effects? (only for custom_tooltip under effect scope)
	- _confirm:0 text of clickable button
	- :0 title

opinion modifier
- add some non-decaying one for being someone's dom/sub
- should also address natural dread

forcing appearance
- with character flags
- checked by a trigger in scripted triggers (see /common/scripted_triggers/PDXCON_clothing_triggers.txt)
- seems to require datacoring (no wonder there are so many conflicts)
- however adding in a prop is easier since it can be added as props to an animation
- triggered_outfit

duel
- skill = prowess to set prowess as the comparison stat
- value = other character's value

effect / commands
- actual code that gets imperatively executed
- inside events, can reside within immediate = {}, and option = {}
- anything that takes = {X Y} can also just work as = X, takes random value in between the two values
- control effects 
	- if = { limit = { <triggers> } <effects> }
	- while = {
		    limit = { <triggers> }
		    <effects>
		}
		while = { count = 3 <effects> }
	- switch = {
			trigger = simple_assign_trigger
			case_1 = { <effects> }
			case_2 = { <effects> }
			case_n = { <effects> }
			fallback = { <effects> }
		}
	- random = { chance = X modifier = Y effects... }
	- random_list = {
	    X1 = {
	        trigger = { ... }
	        modifier/compare_modifier/opinion_modifier = Y1
	        effect1
	    }
	    X2 = { ... }
	    ...
	}
- have random effect show up as tooltip with show_as_tooltip
effect = {
		save_scope_as = challenger

		add_character_flag = { #To enable the event and block the decision
			flag = recently_took_the_tribal_challenge_ruler_decision
			years = 10
		}

		liege = {
			save_scope_as = liege_to_challenge
			primary_title = {
				save_scope_as = title_being_fought_over
			}
			trigger_event = tribal.1001
		}

		custom_tooltip = tribal_challenge_ruler_effect_tooltip
		show_as_tooltip = {
			random_list = {
				10 = {
					show_chance = no
					desc = tribal_challenge_ruler_desc_success
					tribal_transfer_liege_title_effect = yes
				}
				10 = {
					show_chance = no
					desc = tribal_challenge_ruler_desc_failure
					tribal_challenger_lost_effect = yes
				}
			}
		}
	}
- use title tier as value
	multiply = {
		value = root.primary_title.tier
		subtract = 1
		min = 1
	}
- give stress loss only at the cumming event

questions
- what does limit = {...} do?
- how to populate list dynamically? (not a list of pre-existing characters)
- what is potential_partner
- what is sex_partner_check
- use an activity?
- random_prisoner effect
- use has_relation_potential_lover to limit
- consult get_potential_enemies_effect for populating list
- see A Fashionable Debate event for forcing other character to be naked, and also as a duel on stewardship
- how to get hidden opinon modifier?
	- consult 		has_opinion_modifier = {
						modifier = sway_blocker_opinion
						target = scope:owner
					}
	- also for modifier of base_success_chance based on previous actions
		modifier = {
			add = -10
			desc = previously_swayed
			scope:target = {
				has_opinion_modifier = {
					target = scope:owner
					modifier = scheme_sway_opinion
					value >= 25
				}
				has_opinion_modifier = {
					target = scope:owner
					modifier = scheme_sway_opinion
					value < 40
				}
			}
		}
	- actually adding opinion
			scope:target = {
				add_opinion = {
					target = scope:owner
					modifier = scheme_sway_opinion
					opinion = sway_opinion_increase_per_success
				}
			}
- how to get duel-like challenges?
	- consult Intrigue Challenge
- this option is available because of
- how to create an effect that randomly selects an event?
	- would like it to be 
- how to show probability of success in tooltips
	- ANSWER_SUM_CHANCE for imprison
	- SCOPE.ScriptValue('') - not sure what it's applicable to
- see Cultural acceptance tooltip
- holding an event inside a variable
	- 	save_temporary_scope_value_as = {
		name = spouse_event
		value = $SPOUSE_EVENT$
	}
- holding an opinion value inside a variable / using it directly for assignment
				limit = {
					has_artifact_feature = book_subject_relationship
					scope:skill_base = {
						save_temporary_opinion_value_as = {
							name = opinion_of_subject
							target = scope:owner.var:book_topic_relationship
						}
					}
				}
				add = {
					value = scope:opinion_of_subject
					min = 0
					max = 75
				}
			}
- use variables in the body then clear them in the after block
		if = {
			limit = { has_variable = last_hold_court_date }
			remove_variable = last_hold_court_date
		}
		set_variable = {
			name = last_hold_court_date
			value = current_year
		}


TODO
- connect Carnalitas fetish system
- royal court event
- more hooks into sex scenes
	- after duel win/loss
	- during feast drinking
	- player actively sneaking into rooms

- scene with someone peddling piercings that increase sensitivity
	- dom not receiving satisfying orgasms from slave
	- leads to domaination loss since even the flakiest slave will have mastery over your sex
- sex event edging can use force_root_stamina_finishes=True to not terminate events even if partner's stamina <= 0

TODO long term
- add sex skills
	- blowjob proficiency trait (up to 3 stars)
	- tie into partner stamina cost (can make them scripted values)
- triggered submission events when your subdom relation with someone is sub enough

TODO trait icons for Mange2020
Arms traits
Soft/Muscular/Bulky/Hulking/Wiry/Skeletal/Doughy/Flabby
Butt Traits
Pin Buttocks/Flat Bottomed/Pancake Butt/Slender Hipped/Middling Rear/Curvy/Bubbly Butt/Brawn Buttocks/Broad Bottomed/Callypygian/Quatch Buttocks/Maximus Gluteus/Colossal Bottomed 
I guess I made a lot of those lol
Height Traits
Diminutive/Miniature/Pint Sized/Little/Short/Average Height/Tall/Towering/Altitudinous/Huge/Gigantic
Stomach Traits
Average Weight/Toned/Chiseled/Svelte/Skinny/Malnourished/Sunken/Chubby/Fat/Obese/Morbidly Obese
Breast Traits
A Bosom (its the average one)/Titanic Tits/Monsterous Tits
Dick Traits
A Dick/Monster Cock/Impractical Dick
